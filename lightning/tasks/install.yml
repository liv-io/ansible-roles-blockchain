---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_distribution_major_version}}.yml"
        - 'vars/main.yml'
  tags:
    - lightning

- name: install package libpq5, tar
  package:
    state: present
    name: "{{item}}"
    install_recommends: False
  loop:
    - "{{package_name_libpq5}}"
    - "{{package_name_tar}}"
  tags:
    - lightning

- name: create group lightningd
  group:
    state: present
    name: "{{group_name_lightningd}}"
    system: "{{group_system_lightningd}}"
  tags:
    - lightning

- name: create user lightningd
  user:
    state: present
    name: "{{user_name_lightningd}}"
    comment: "{{user_comment_lightningd}}"
    group: "{{user_group_lightningd}}"
    append: "{{user_append_lightningd}}"
    createhome: "{{user_home_create_lightningd}}"
    move_home: "{{user_home_move_lightningd}}"
    remove: "{{user_home_remove_lightningd}}"
    force: "{{user_home_force_lightningd}}"
    password: "{{user_password_lightningd}}"
    update_password: "{{user_password_update_lightningd}}"
    shell: "{{user_shell_lightningd}}"
    system: "{{user_system_lightningd}}"
  tags:
    - lightning

- name: create file app.dir
  file:
    state: directory
    path: "{{file_dst_app_dir}}"
    mode: "{{file_mode_app_dir}}"
    owner: "{{file_owner_app_dir}}"
    group: "{{file_group_app_dir}}"
  tags:
    - lightning

- name: create file lightningd_app.dir
  file:
    state: directory
    path: "{{file_dst_lightningd_app_dir}}"
    mode: "{{file_mode_lightningd_app_dir}}"
    owner: "{{file_owner_lightningd_app_dir}}"
    group: "{{file_group_lightningd_app_dir}}"
  tags:
    - lightning

- name: create file clightning-version.dir
  file:
    state: directory
    path: "{{file_dst_clightning_version_dir}}"
    mode: "{{file_mode_clightning_version_dir}}"
    owner: "{{file_owner_clightning_version_dir}}"
    group: "{{file_group_clightning_version_dir}}"
  tags:
    - lightning

- name: create file data.dir
  file:
    state: directory
    path: "{{file_dst_data_dir}}"
    mode: "{{file_mode_data_dir}}"
    owner: "{{file_owner_data_dir}}"
    group: "{{file_group_data_dir}}"
  tags:
    - lightning

- name: create file lightningd_data.dir
  file:
    state: directory
    path: "{{file_dst_lightningd_data_dir}}"
    mode: "{{file_mode_lightningd_data_dir}}"
    owner: "{{file_owner_lightningd_data_dir}}"
    group: "{{file_group_lightningd_data_dir}}"
  tags:
    - lightning

- name: create file bitcoin-cli.dir
  file:
    state: directory
    path: "{{file_dst_bitcoin_cli_dir}}"
    mode: "{{file_mode_bitcoin_cli_dir}}"
    owner: "{{file_owner_bitcoin_cli_dir}}"
    group: "{{file_group_bitcoin_cli_dir}}"
  tags:
    - lightning

- name: create file lightningd_log.dir
  file:
    state: directory
    path: "{{file_dst_lightningd_log_dir}}"
    mode: "{{file_mode_lightningd_log_dir}}"
    owner: "{{file_owner_lightningd_log_dir}}"
    group: "{{file_group_lightningd_log_dir}}"
  tags:
    - lightning

- name: create file lightningd_src.dir
  file:
    state: directory
    path: "{{file_dst_lightningd_src_dir}}"
    mode: "{{file_mode_lightningd_src_dir}}"
    owner: "{{file_owner_lightningd_src_dir}}"
    group: "{{file_group_lightningd_src_dir}}"
  tags:
    - lightning

- name: download file clightning.tar.gz
  get_url:
    url: "{{file_src_clightning_tar_gz}}"
    dest: "{{file_dst_clightning_tar_gz}}"
    mode: "{{file_mode_clightning_tar_gz}}"
    owner: "{{file_owner_clightning_tar_gz}}"
    group: "{{file_group_clightning_tar_gz}}"
    checksum: "{{file_checksum_clightning_tar_gz}}"
  tags:
    - lightning

- name: unarchive file clightning.tar.gz
  unarchive:
    src: "{{file_src_clightning}}"
    dest: "{{file_dst_clightning}}"
    owner: "{{file_owner_clightning}}"
    group: "{{file_group_clightning}}"
    creates: "{{file_creates_clightning}}"
    remote_src: True
  tags:
    - lightning

- name: create file clightning-current.link
  file:
    state: link
    src: "{{file_src_clightning_current_link}}"
    path: "{{file_dst_clightning_current_link}}"
    owner: "{{file_owner_clightning_current_link}}"
    group: "{{file_group_clightning_current_link}}"
  tags:
    - lightning

- name: create file lightningd_conf.dir
  file:
    state: directory
    path: "{{file_dst_lightningd_conf_dir}}"
    mode: "{{file_mode_lightningd_conf_dir}}"
    owner: "{{file_owner_lightningd_conf_dir}}"
    group: "{{file_group_lightningd_conf_dir}}"
  tags:
    - lightning

- name: create file lightningd.service
  template:
    src: "{{file_src_lightningd_service}}"
    dest: "{{file_dst_lightningd_service}}"
    mode: "{{file_mode_lightningd_service}}"
    owner: "{{file_owner_lightningd_service}}"
    group: "{{file_group_lightningd_service}}"
  tags:
    - lightning

- name: stat file monit.d
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (lightning_monitor_monit_state == True)
  tags:
    - lightning

- name: create file monit.d
  file:
    state: directory
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (lightning_monitor_monit_state == True) and (register_monit_d.stat.exists == False)
  tags:
    - lightning

- name: check service monit
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 1)
  failed_when: (register_check_service_monit.rc > 1)
  check_mode: False
  when: (lightning_monitor_monit_state == True)
  tags:
    - lightning

- name: stat file nftables.d
  stat:
    path: "{{file_dst_nftables_d}}"
  register: register_nftables_d
  when: (lightning_nftables_state == True)
  tags:
    - lightning

- name: create file nftables.d
  file:
    state: directory
    path: "{{file_dst_nftables_d}}"
    mode: "{{file_mode_nftables_d}}"
    owner: "{{file_owner_nftables_d}}"
    group: "{{file_group_nftables_d}}"
  when: (lightning_nftables_state == True) and (register_nftables_d.stat.exists == False)
  tags:
    - lightning

- name: check service nftables
  shell: "{{command_cmd_check_service_nftables}}"
  register: register_check_service_nftables
  changed_when: (register_check_service_nftables.rc > 1)
  failed_when: (register_check_service_nftables.rc > 1)
  check_mode: False
  when: (lightning_nftables_state == True)
  tags:
    - lightning
